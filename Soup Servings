class Solution {
    public double soupServings(int n) {
        if(n>4800)
        {
            return 1.0;
        }
        int units=(int)(Math.ceil(n/25.0));
        double []prev=new double[units+1];
        for(int a=0;a<=units;a++)
        {
            for(int b=0;b<=units;b++)
            {
                if(a<=0 && b>0)
                {
                    dp[a][b]=1.0;
                }
                else if(a<=0 && b<=0)
                {
                    dp[a][b]=0.5;
                }
                else if(a>0 && b<=0)
                {
                    dp[a][b]=0.0;
                }

            }
        }
        for(int a=1;a<=units;a++)
        {
            for(int b=1;b<=units;b++)
            {
                dp[a][b] = 0.25 * (
    dp[Math.max(0, a - 4)][b] +
    dp[Math.max(0, a - 3)][Math.max(0, b - 1)] +
    dp[Math.max(0, a - 2)][Math.max(0, b - 2)] +
    dp[Math.max(0, a - 1)][Math.max(0, b - 3)]
);

            }
        }
        return dp[units][units];
    }
}
